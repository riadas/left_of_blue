Vector{Function}[[Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], ""), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], ""), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], ""), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], ""), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], ""), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], ""), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], ""), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], ""), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && next(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "location_arg.wall2.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(next(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && next(next(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(next(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && prev(prev(location_arg, locations), locations).wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "next(location_arg, locations).color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "prev(location_arg, locations).wall2.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "location_arg.wall2.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall2.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "next(location_arg, locations).wall1.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && prev(location_arg, locations).color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], "prev(prev(location_arg, locations), locations).wall1.color == color_arg"), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")], [Function("at", ["location_arg", "color_arg"], DataType[Wall, COLOR], "location_arg.color == color_arg"), Function("my_left", ["location_arg"], DataType[Spot], "location_arg.position.x < 0"), Function("left_of", ["location_arg", "color_arg"], DataType[Corner, COLOR], ""), Function("left_of", ["location_arg", "color1_arg", "color2_arg"], DataType[Corner, COLOR, COLOR], "next(location_arg, locations).color == color1_arg && location_arg.wall1.color == color2_arg")]]